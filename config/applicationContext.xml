<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

	<context:component-scan base-package="com.ycg.ycexpress"/>

	<!-- 指明数据库相关配置的properties文件 -->
	<context:property-placeholder location="classpath:db.properties"/>
	
	<!-- 配置数据库连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClass}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.user}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxPoolSize" value="${c3p0.maxPoolSize}" />
		<property name="minPoolSize" value="${c3p0.minPoolSize}" />
		<property name="initialPoolSize" value="${c3p0.initialPoolSize}" />
		<property name="acquireIncrement" value="${c3p0.acquireIncrement}" />
		
		<!--定义在从数据库获取新连接失败后重复尝试获取的次数，默认为30  -->
		<property name="acquireRetryAttempts" value="100" /> 
		<!--两次连接中间隔时间，单位毫秒，默认为1000  -->
		<property name="acquireRetryDelay" value="1000" /> 
		<!--连接关闭时默认将所有未提交的操作回滚。默认为false  -->
		<property name="autoCommitOnClose" value="false" /> 
		<!--获取连接失败将会引起所有等待获取连接的线程抛出异常。但是数据源仍有效保留，并在下 次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试获取连接
			 失败后该数据源将申明已断开并永久关闭。默认为false -->
		<property name="breakAfterAcquireFailure" value="false" /> 
		<!--当连接池用完时客户端调用getConnection()后等待获取新连接的时间，超时后将抛出SQLException，如设为0则无限期等待。单位毫秒，默认为0-->
		<property name="checkoutTimeout" value="20000" />
		<!--最大空闲时间，超过空闲时间的连接将被丢弃。为0或负数则永不丢弃。默认为0-->
		<property name="maxIdleTime" value="60" /> 
		<!--每隔一段时间检查所有连接池中的空闲连接。Default: 0-->
		<property name="idleConnectionTestPeriod" value="60"/>  
		<!--C3P0是异步操作的，缓慢的JDBC操作通过帮助进程完成。扩展这些操作可以有效的提升性能通过多线程实现多个操作同时被执行。默认为3-->
		<property name="numHelperThreads" value="3" /> 
		<!--JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。
			如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0-->
		<property name="maxStatements" value="10" /> 
		<!--获取connection时测试是否有效-->
		<property name="testConnectionOnCheckin" value="true"/>
		<property name="testConnectionOnCheckout" value="false"/>
		<property name="automaticTestTable" value="C3P0TestTable"/>
		
	</bean>
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="typeAliasesPackage" value="com.ycg.ycexpress.beans"/>
		<property name="configLocation" value="classpath:/mybatis-config.xml"/>
		<property name="mapperLocations" value="classpath:/mybatis/*Mapper.xml"/>
	</bean>
	
	<!-- mybatis MapperScannerConfigurer -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
		<property name="basePackage" value="com.ycg.ycexpress.dao"/>
	</bean>
	
	<bean id="transactionManager" 
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!-- netty服务配置 -->
	
  	
</beans>